<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.ubing.res.dao.RUserBusinessLineMapper" >
  <resultMap id="BaseResultMap" type="cn.com.ubing.res.model.RUserBusinessLine" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="line_id" property="lineId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="DtoResultMap" type="cn.com.ubing.res.dto.ResDictDto" >
  	<id column="id" property="id" jdbcType="BIGINT" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="short_py" property="shortPy" jdbcType="VARCHAR" />
    <result column="pyszm" property="pyszm" jdbcType="VARCHAR" />
	<result column="status" property="status" jdbcType="INTEGER" />
	<result column="hot_status" property="hotStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, update_time, delete_flag, line_id, user_id, business_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from r_user_business_line
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getLinesDtoByUser" resultMap="DtoResultMap">
  	SELECT id, cname, ename, short_py, pyszm, STATUS, hot_status, type
	FROM res_dict  WHERE STATUS = 1  AND delete_flag = 0  AND id IN(
    (SELECT line_id FROM r_user_business_line WHERE user_id = #{userId,jdbcType=BIGINT} AND business_type = #{businessType} 
      AND delete_flag = 0)) ORDER BY order_index DESC 
  </select>
  <select id="getLinesByUser" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from r_user_business_line
    where user_id = #{userId,jdbcType=BIGINT} and business_type=#{businessType} and delete_flag=0
  </select>
  <select id="getByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from r_user_business_line
    where user_id = #{userId,jdbcType=BIGINT} and delete_flag=0
  </select>
  <delete id="deleteByUserIdAndType" parameterType="java.lang.Long" >
  	update r_user_business_line set delete_flag=1 where user_id=#{userId} and business_type=#{businessType}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update r_user_business_line set delete_flag=1
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.com.ubing.res.model.RUserBusinessLine" >
    insert into r_user_business_line (id, create_time, update_time, 
      delete_flag, line_id, user_id, business_type
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleteFlag,jdbcType=INTEGER}, #{lineId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{businessType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.ubing.res.model.RUserBusinessLine" >
    insert into r_user_business_line
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="lineId != null" >
        line_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="lineId != null" >
        #{lineId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.ubing.res.model.RUserBusinessLine" >
    update r_user_business_line
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="lineId != null" >
        line_id = #{lineId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.ubing.res.model.RUserBusinessLine" >
    update r_user_business_line
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      line_id = #{lineId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT}
      business_type = #{businessType,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>