<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.ubing.ask.dao.AskQuestionMapper" >
  
  
  
  <resultMap id="BaseResultMap" type="cn.com.ubing.ask.model.AskQuestion" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="from_id" property="fromId" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="target_region_id" property="targetRegionId" jdbcType="BIGINT" />
  </resultMap>
 
  <select id="listQuestionContent" resultType="cn.com.ubing.ask.dto.content.QuestionDetailContent">
  		select t.id as id,t.content as content,(select count(1) from ask_answer where delete_flag=0 and question_id=t.id) as answerCount,DATE_FORMAT(t.create_time,'%Y-%m-%d %H:%m:%s') as createTime,t.update_time,t1.cname as targetRegionName,t2.nickname as fromUserName,
  			(select x.save_path from res_attachment x join rms_user y on x.id=y.image__attahcment_id where y.id=t.from_id) as fromeUserIcon
  			from ask_question t
  			left join res_dict t1 on t.target_region_id=t1.id
  			left join rms_user t2 on t.from_id=t2.id
  				where t.delete_flag=0
  			<if test='type=="1"'>
  				and t.from_id=${uid}
  				and t.status=0
  			</if>
  			<if test='type=="2"'>
  				and t.from_id=${uid}
  				and t.status=1
  			</if>
  			<if test='type=="3"'>
  				and t.status=1
  			</if>
  			<if test="targetRegionName!=null and targetRegionName!=''">
  				and t1.cname like concat('%',#{targetRegionName},'%')
  			</if>
  </select>
  
  
  <select id="getQuestionContent" parameterType="java.lang.Long" resultType="cn.com.ubing.ask.dto.content.QuestionDetailContent">
  		select t.id as id,t.content as content,(select count(1) from ask_answer where delete_flag=0 and question_id=t.id) as answerCount,DATE_FORMAT(t.create_time,'%Y-%m-%d %H:%m:%s') as createTime,t.update_time,t1.cname as targetRegionName,t2.nickname as fromUserName ,
  			(select x.save_path from res_attachment x join rms_user y on x.id=y.image__attahcment_id where y.id=t.from_id) as fromeUserIcon
  			from ask_question t
  			left join res_dict t1 on t.target_region_id=t1.id
  			left join rms_user t2 on t.from_id=t2.id
  				where t.id=#{id}
  </select>
  
  
  <sql id="Base_Column_List" >
    id, create_time, update_time, delete_flag, from_id, content, status, target_region_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ask_question
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update ask_question set delete_flag=1
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert"  keyProperty="id" useGeneratedKeys="true" parameterType="cn.com.ubing.ask.model.AskQuestion" >
    insert into ask_question (id, create_time, update_time, 
      delete_flag, from_id, content, 
      status, target_region_id)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleteFlag,jdbcType=INTEGER}, #{fromId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{targetRegionId,jdbcType=BIGINT})
  </insert>
 
  <update id="updateByPrimaryKey" parameterType="cn.com.ubing.ask.model.AskQuestion" >
    update ask_question
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      from_id = #{fromId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      target_region_id = #{targetRegionId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>